# This is a basic workflow to help you get started with Actions

name: rollback_changes

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the main branch
on:
  workflow_dispatch:
#   push:
#     branches: [ main ]
#   pull_request:
#     branches: [ main ]
    inputs:
      tag:
        description: 'Enter tag to rollback'
        required: true
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
    
jobs:

  Build_Job:
    runs-on: ubuntu-latest

    steps:      
      - name: Rolling back DEV changes
        uses: docker://liquibase/liquibase:latest
        with:
          args: --changeLogFile=./SQL_CODE/changelog.sql checks run
          
  Test_Job:
    needs: Build_Job
    runs-on: ubuntu-latest
    environment: 
      name: TEST

    steps:
      - name: Rolling back TEST changes
        uses: actions/checkout@v2
      - run: |
          curl -L https://github.com/liquibase/liquibase/releases/download/v${LB_VERSION}/liquibase-${LB_VERSION}.zip --output liquibase-${LB_VERSION}.zip; unzip -o -d liquibase liquibase-${LB_VERSION}.zip; cp drivers/liquibase-snowflake.jar ./liquibase/lib/; cp drivers/snowflake-jdbc-3.12.0.jar ./liquibase/lib/
          ./liquibase/liquibase --classpath=./drivers/snowflake-jdbc-3.12.0.jar --changeLogFile=./changelogs/changelog.sql rollback "${{ github.event.inputs.tag }}"
          
  
  Deploy_Prod_Job:
    needs: Test_Job
    runs-on: ubuntu-latest
    environment: 
      name: PROD

    steps:
      - name: Rolling back PROD changes
        uses: actions/checkout@v2
      - run: |
          curl -L https://github.com/liquibase/liquibase/releases/download/v${LB_VERSION}/liquibase-${LB_VERSION}.zip --output liquibase-${LB_VERSION}.zip; unzip -o -d liquibase liquibase-${LB_VERSION}.zip; cp drivers/liquibase-snowflake.jar ./liquibase/lib/; cp drivers/snowflake-jdbc-3.12.0.jar ./liquibase/lib/
          ./liquibase/liquibase --changeLogFile=./changelogs/changelog.sql rollback "${{ github.event.inputs.tag }}"
