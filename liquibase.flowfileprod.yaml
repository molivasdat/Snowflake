##########           LIQUIBASE FLOWFILE                ##########
##########  learn more http://docs.liquibase.com/flow  ##########

globalVariables:
  ### Files
  ### Use absolute paths when using Liquibase's Docker container
  ###
  BASE_DIR: "./"
  DIFF_FILE: "${BASE_DIR}/Diff_${LB_ENVIRONMENT}.json"
  SNAPSHOT_FILE: "Snapshot_${LB_ENVIRONMENT}.json"
stages:

  ## The first stage of actions
  Default:
    actions:
      #
      # Quality Checks for changelog
      #
      - type: liquibase
        command: checks run
        cmdArgs: {checks-scope: changelog, reports-enabled: true, report-name: "checks-report-${LB_ENVIRONMENT}.html" }
      #
      # Run diff
      # Update database type in cmdArgs (e.g., oracle, mssql, etc.)
      #
      - type: liquibase
        command: diff
        globalArgs: { outputfile: "${DIFF_FILE}" }
        cmdArgs: { referenceURL: "offline:snowflake?snapshot=${SNAPSHOT_FILE}", format: json, reports-enabled: true, report-name: "drift-report-${LB_ENVIRONMENT}.html" }
      #
      # Review pending changes
      #
      - type: liquibase
        command: updateSQL
      #
      # Tag the database
      #
      - type: liquibase
        command: tag
      #
      # Update the database
      #
      - type: liquibase
        command: update
        cmdArgs: { reports-enabled: true, report-name: "update-report-${LB_ENVIRONMENT}.html" }
      #
      # Create updated snapshot
      #
      - type: liquibase
        command: snapshot
        globalArgs: { outputfile: "${BASE_DIR}/${SNAPSHOT_FILE}" }
        cmdArgs: { snapshotFormat: "json" }

## do these actions after all flow commands, regardless of whether the above commands were successful
endStage:
  actions:
    - type: liquibase
      command: history
